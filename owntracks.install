<?php

/**
 * @file
 * Install functions of the module.
 */

use Symfony\Component\Yaml\Yaml;

/**
 * Implements hook_requirements().
 */
function owntracks_requirements($phase) {
  if ($phase === 'runtime') {
    $settings = \Drupal::config('owntracks.map.settings')->get();

    return [
      'owntracks' => [
        'title' => 'OwnTracks Map Configuration',
        'value' => empty($settings) ? t('Not configured') : t('Configured'),
        'severity' => empty($settings) ? REQUIREMENT_ERROR : REQUIREMENT_OK,
        'description' => empty($settings) ? t('OwnTracks Map is not configured. <a href=":url">Add configuration</a>', [':url' => \Drupal::url('owntracks.map_settings')]) : t('OwnTracks Map is configured.'),
      ],
    ];
  }
}

/**
 * Truncate table {cache_data} to allow p (Ping) location trigger value.
 */
function owntracks_update_8001() {
  db_query('TRUNCATE table {cache_data}');
}

/**
 * Fix cache contexts of owntracks entities views.
 */
function owntracks_update_8002() {
  $names = [
    'views.view.owntracks_location',
    'views.view.owntracks_waypoint',
    'views.view.owntracks_transition',
  ];

  foreach ($names as $name) {
    $update = FALSE;
    $config = \Drupal::configFactory()->getEditable($name);
    $contexts = (array) $config->get('display.user.cache_metadata.contexts');

    foreach ($contexts as $key => $value) {
      if ($value === 'user.permissions') {
        $contexts[$key] = 'user';
        $update = TRUE;
        break;
      }
    }

    if ($update) {
      $config->set('display.user.cache_metadata.contexts', $contexts)->save();
    }
  }
}

/**
 * Truncate table {cache_data} to allow v (Frequent) location trigger value.
 */
function owntracks_update_8003() {
  db_query('TRUNCATE table {cache_data}');
}

/**
 * Update owntracks_location view.
 */
function owntracks_update_8004() {
  $file = implode(DIRECTORY_SEPARATOR, [
    drupal_get_path('module', 'owntracks'),
    'config',
    'optional',
    'views.view.owntracks_location.yml',
  ]);

  $data = Yaml::parse(file_get_contents($file));

  \Drupal::configFactory()->getEditable('views.view.owntracks_location')
    ->setData($data)
    ->save();
}

/**
 * Update owntracks entity types definitions.
 */
function owntracks_update_8005() {
  $entity_type_manager = \Drupal::entityTypeManager();
  $entity_definition_update_manager = \Drupal::entityDefinitionUpdateManager();
  $owntracks_location = $entity_type_manager->getDefinition('owntracks_location');
  $entity_definition_update_manager->updateEntityType($owntracks_location);
  $owntracks_transition = $entity_type_manager->getDefinition('owntracks_transition');
  $entity_definition_update_manager->updateEntityType($owntracks_transition);
  $owntracks_waypoint = $entity_type_manager->getDefinition('owntracks_waypoint');
  $entity_definition_update_manager->updateEntityType($owntracks_waypoint);
}

/**
 * Update owntracks entity field definitions.
 */
function owntracks_update_8006() {
  // Update has to be performed a second time to add indexes.
  owntracks_update_8005();
}

/**
 * Reinstall owntracks views.
 */
function owntracks_update_8007() {
  $views = [
    'views.view.owntracks_location',
    'views.view.owntracks_transition',
    'views.view.owntracks_waypoint',
  ];

  foreach ($views as $view) {
    \Drupal::configFactory()->getEditable($view)->delete();
  }

  \Drupal::service('config.installer')
    ->installdefaultConfig('module', 'owntracks');
}

/**
 * Remove _type fields.
 */
function owntracks_update_8008() {
  $entity_type_ids = [
    'owntracks_location',
    'owntracks_transition',
    'owntracks_waypoint',
  ];

  $manager = \Drupal::entityDefinitionUpdateManager();
  $database = \Drupal::database();

  foreach ($entity_type_ids as $entity_type_id) {
    $database->update($entity_type_id)
      ->fields(['_type' => NULL])
      ->execute();

    $field = $manager->getFieldStorageDefinition('_type', $entity_type_id);
    $manager->uninstallFieldStorageDefinition($field);
  }
}

/**
 * Allow NULL on optional fields.
 */
function owntracks_update_8009() {
  $spec = [
    'fields' => [
      'uid' => [
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ],
      'tid' => [
        'type' => 'varchar',
        'not null' => FALSE,
        'length' => 255,
      ],
      'acc' => [
        'type' => 'int',
        'not null' => FALSE,
        'unsigned' => TRUE,
      ],
      'rad' => [
        'type' => 'int',
        'not null' => FALSE,
        'unsigned' => TRUE,
      ],
      'description' => [
        'type' => 'varchar',
        'not null' => FALSE,
        'length' => 255,
      ],
    ],
  ];

  db_drop_index('owntracks_location', 'owntracks_location_field__acc');
  db_change_field('owntracks_location', 'acc', 'acc', $spec['fields']['acc']);
  db_add_index('owntracks_location', 'owntracks_location_field__acc', ['acc'], $spec);

  db_drop_index('owntracks_location', 'owntracks_location_field__tid');
  db_drop_index('owntracks_location', 'owntracks_location__uid_tid');
  db_change_field('owntracks_location', 'tid', 'tid', $spec['fields']['tid']);
  db_add_index('owntracks_location', 'owntracks_location_field__tid', ['tid'], $spec);
  db_add_index('owntracks_location', 'owntracks_location__uid_tid', ['uid', 'tid'], $spec);

  db_drop_index('owntracks_transition', 'owntracks_transition_field__tid');
  db_drop_index('owntracks_transition', 'owntracks_transition__uid_tid');
  db_change_field('owntracks_transition', 'tid', 'tid', $spec['fields']['tid']);
  db_add_index('owntracks_transition', 'owntracks_transition_field__tid', ['tid'], $spec);
  db_add_index('owntracks_transition', 'owntracks_transition__uid_tid', ['uid', 'tid'], $spec);

  db_drop_index('owntracks_waypoint', 'owntracks_waypoint_field__rad');
  db_change_field('owntracks_waypoint', 'rad', 'rad', $spec['fields']['rad']);
  db_add_index('owntracks_waypoint', 'owntracks_waypoint_field__rad', ['rad'], $spec);

  db_drop_index('owntracks_waypoint', 'owntracks_waypoint_field__description');
  db_change_field('owntracks_waypoint', 'description', 'description', $spec['fields']['description']);
  db_add_index('owntracks_waypoint', 'owntracks_waypoint_field__description', ['description'], $spec);
}

/**
 * Set field description mandatory on owntracks_waypoint entities.
 */
function owntracks_update_8010() {
  $spec = [
    'fields' => [
      'description' => [
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 255,
      ],
    ],
  ];

  db_drop_index('owntracks_waypoint', 'owntracks_waypoint_field__description');
  db_change_field('owntracks_waypoint', 'description', 'description', $spec['fields']['description']);
  db_add_index('owntracks_waypoint', 'owntracks_waypoint_field__description', ['description'], $spec);
}

/**
 * Flush caches to allow l (Location) transition trigger value.
 */
function owntracks_update_8011() {
  drupal_flush_all_caches();
}
